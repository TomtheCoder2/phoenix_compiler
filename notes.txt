Input:

        print(5);
        print(6);
    
AST:
Program {
    statements: [
        ExpressionStmt(
            FunctionCall {
                name: "print",
                args: [
                    NumberLiteral(
                        5.0,
                    ),
                ],
            },
        ),
        ExpressionStmt(
            FunctionCall {
                name: "print",
                args: [
                    NumberLiteral(
                        6.0,
                    ),
                ],
            },
        ),
    ],
}

--- LLVM IR (Module) ---
Emitting object file to: output.o
Successfully emitted object file: output.o

--- Linking ---
Attempting to link output.o using clang
Successfully linked executable: output_executable
You can inspect it with: file output_executable


output:

janwi@Jans-MacBook-Pro toylang_compiler % ./output_executable
5.000000
0.000000
6.000000


this is the assembly code

output.o:
(__TEXT,__text) section
_main:
0000000000000000	sub	sp, sp, #0x20
0000000000000004	stp	x29, x30, [sp, #0x10]
0000000000000008	adrp	x0, 0 ; 0x0
000000000000000c	add	x0, x0, #0x0
0000000000000010	mov	x8, #0x4014000000000000
0000000000000014	str	x8, [sp]
0000000000000018	bl	0x18
000000000000001c	adrp	x0, 0 ; 0x0
0000000000000020	add	x0, x0, #0x0
0000000000000024	mov	x8, #0x4018000000000000
0000000000000028	str	x8, [sp]
000000000000002c	bl	0x2c
0000000000000030	ldp	x29, x30, [sp, #0x10]
0000000000000034	mov	w0, wzr
0000000000000038	add	sp, sp, #0x20
000000000000003c	ret
